<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Iceberg</title><link>https://iceberg.apache.org/</link><description>Recent content on Apache Iceberg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://iceberg.apache.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Expressive SQL</title><link>https://iceberg.apache.org/services/expressive-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/services/expressive-sql/</guid><description> MERGE INTO prod.nyc.taxis pt USING (SELECT * FROM staging.nyc.taxis) st ON pt.id = st.id WHEN NOT MATCHED THEN INSERT *; Done!</description></item><item><title>Full Schema Evolution</title><link>https://iceberg.apache.org/services/schema-evolution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/services/schema-evolution/</guid><description> ALTER TABLE taxis ALTER COLUMN trip_distance TYPE double; Done! ALTER TABLE taxis ALTER COLUMN trip_distance AFTER fare; Done! ALTER TABLE taxis RENAME COLUMN trip_distance TO distance; Done!</description></item><item><title>Hidden Partitioning</title><link>https://iceberg.apache.org/services/hidden-partitioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/services/hidden-partitioning/</guid><description/></item><item><title>Time Travel and Rollback</title><link>https://iceberg.apache.org/services/time-travel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/services/time-travel/</guid><description> SELECT count(*) FROM nyc.taxis 2,853,020 SELECT count(*) FROM nyc.taxis FOR VERSION AS OF 2188465307835585443 2,798,371 SELECT count(*) FROM nyc.taxis FOR TIMESTAMP AS OF TIMESTAMP '2022-01-01 00:00:00.000000 Z' 2,798,371</description></item><item><title>Data Compaction</title><link>https://iceberg.apache.org/services/data-compaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/services/data-compaction/</guid><description> CALL system.rewrite_data_files("nyc.taxis");</description></item><item><title>Hive and Iceberg Quickstart</title><link>https://iceberg.apache.org/hive-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/hive-quickstart/</guid><description>Hive and Iceberg Quickstart This guide will get you up and running with an Iceberg and Hive environment, including sample code to highlight some powerful features. You can learn more about Iceberg&amp;rsquo;s Hive runtime by checking out the Hive section.
Docker Images Creating a Table Writing Data to a Table Reading Data from a Table Next Steps Docker Images The fastest way to get started is to use Apache Hive images which provides a SQL-like interface to create and query Iceberg tables from your laptop.</description></item><item><title>Spark and Iceberg Quickstart</title><link>https://iceberg.apache.org/spark-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/spark-quickstart/</guid><description>Spark and Iceberg Quickstart This guide will get you up and running with an Iceberg and Spark environment, including sample code to highlight some powerful features. You can learn more about Iceberg&amp;rsquo;s Spark runtime by checking out the Spark section.
Docker-Compose Creating a table Writing Data to a Table Reading Data from a Table Adding A Catalog Next Steps Docker-Compose The fastest way to get started is to use a docker-compose file that uses the tabulario/spark-iceberg image which contains a local Spark cluster with a configured Iceberg catalog.</description></item><item><title>Releases</title><link>https://iceberg.apache.org/releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/releases/</guid><description>Downloads The latest version of Iceberg is 1.4.3.
1.4.3 source tar.gz &amp;ndash; signature &amp;ndash; sha512 1.4.3 Spark 3.5_2.12 runtime Jar &amp;ndash; 3.5_2.13 1.4.3 Spark 3.4_2.12 runtime Jar &amp;ndash; 3.4_2.13 1.4.3 Spark 3.3_2.12 runtime Jar &amp;ndash; 3.3_2.13 1.4.3 Spark 3.2_2.12 runtime Jar &amp;ndash; 3.2_2.13 1.4.3 Flink 1.17 runtime Jar 1.4.3 Flink 1.16 runtime Jar 1.4.3 Flink 1.15 runtime Jar 1.4.3 Hive runtime Jar 1.4.3 aws-bundle Jar 1.4.3 gcp-bundle Jar 1.4.3 azure-bundle Jar To use Iceberg in Spark or Flink, download the runtime JAR for your engine version and add it to the jars folder of your installation.</description></item><item><title>AES GCM Stream Spec</title><link>https://iceberg.apache.org/gcm-stream-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/gcm-stream-spec/</guid><description>AES GCM Stream file format extension Background and Motivation Iceberg supports a number of data file formats. Two of these formats (Parquet and ORC) have built-in encryption capabilities, that allow to protect sensitive information in the data files. However, besides the data files, Iceberg tables also have metadata files, that keep sensitive information too (e.g., min/max values in manifest files, or bloom filter bitsets in puffin files). Metadata file formats (AVRO, JSON, Puffin) don&amp;rsquo;t have encryption support.</description></item><item><title>Benchmarks</title><link>https://iceberg.apache.org/benchmarks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/benchmarks/</guid><description>Available Benchmarks and how to run them Benchmarks are located under &amp;lt;project-name&amp;gt;/jmh. It is generally favorable to only run the tests of interest rather than running all available benchmarks. Also note that JMH benchmarks run within the same JVM as the system-under-test, so results might vary between runs.
Running Benchmarks on GitHub It is possible to run one or more Benchmarks via the JMH Benchmarks GH action on your own fork of the Iceberg repo.</description></item><item><title>Blogs</title><link>https://iceberg.apache.org/blogs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/blogs/</guid><description>Iceberg Blogs Here is a list of company blogs that talk about Iceberg. The blogs are ordered from most recent to oldest.
Apache Hive-4.x with Iceberg Branches &amp;amp; Tags Date: October 12th, 2023, Company: Cloudera
Authors: Ayush Saxena
Apache Hive 4.x With Apache Iceberg Date: October 12th, 2023, Company: Cloudera
Authors: Ayush Saxena
From Hive Tables to Iceberg Tables: Hassle-Free Date: July 14th, 2023, Company: Cloudera
Authors: Srinivas Rishindra Pothireddi</description></item><item><title>Community</title><link>https://iceberg.apache.org/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/community/</guid><description>Welcome! Apache Iceberg tracks issues in GitHub and prefers to receive contributions as pull requests.
Community discussions happen primarily on the dev mailing list, on apache-iceberg Slack workspace, and on specific GitHub issues.
Contribute See Contributing for more details on how to contribute to Iceberg.
Issues Issues are tracked in GitHub:
View open issues Open a new issue Slack We use the Apache Iceberg workspace on Slack. To be invited, follow this invite link.</description></item><item><title>Contribute</title><link>https://iceberg.apache.org/contribute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/contribute/</guid><description>Contributing In this page, you will find some guidelines on contributing to Apache Iceberg. Please keep in mind that none of these are hard rules and they&amp;rsquo;re meant as a collection of helpful suggestions to make contributing as seamless of an experience as possible.
If you are thinking of contributing but first would like to discuss the change you wish to make, we welcome you to head over to the Community page on the official Iceberg documentation site to find a number of ways to connect with the community, including slack and our mailing lists.</description></item><item><title>How To Release</title><link>https://iceberg.apache.org/how-to-release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/how-to-release/</guid><description>Introduction This page walks you through the release process of the Iceberg project. Here you can read about the release process in general for an Apache project.
Decisions about releases are made by three groups:
Release Manager: Does the work of creating the release, signing it, counting votes, announcing the release and so on. Requires the assistance of a committer for some steps. The community: Performs the discussion of whether it is the right time to create a release and what that release should contain.</description></item><item><title>Iceberg Catalogs</title><link>https://iceberg.apache.org/catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/catalog/</guid><description>Iceberg Catalogs Overview You may think of Iceberg as a format for managing data in a single table, but the Iceberg library needs a way to keep track of those tables by name. Tasks like creating, dropping, and renaming tables are the responsibility of a catalog. Catalogs manage a collection of tables that are usually grouped into namespaces. The most important responsibility of a catalog is tracking a table&amp;rsquo;s current metadata, which is provided by the catalog when you load a table.</description></item><item><title>Multi-Engine Support</title><link>https://iceberg.apache.org/multi-engine-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/multi-engine-support/</guid><description>Multi-Engine Support Apache Iceberg is an open standard for huge analytic tables that can be used by any processing engine. The community continuously improves Iceberg core library components to enable integrations with different compute engines that power analytics, business intelligence, machine learning, etc. Connectors for Spark, Flink and Hive are maintained in the main Iceberg repository.
Multi-Version Support Processing engine connectors maintained in the iceberg repository are built for multiple versions.</description></item><item><title>Puffin Spec</title><link>https://iceberg.apache.org/puffin-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/puffin-spec/</guid><description>Puffin file format This is a specification for Puffin, a file format designed to store information such as indexes and statistics about data managed in an Iceberg table that cannot be stored directly within the Iceberg manifest. A Puffin file contains arbitrary pieces of information (here called &amp;ldquo;blobs&amp;rdquo;), along with metadata necessary to interpret them. The blobs supported by Iceberg are documented at Blob types.
Format specification A file conforming to the Puffin file format specification should have the structure as described below.</description></item><item><title>Roadmap</title><link>https://iceberg.apache.org/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/roadmap/</guid><description>Roadmap Overview This roadmap outlines projects that the Iceberg community is working on. Each high-level item links to a Github project board that tracks the current status. Related design docs will be linked on the planning boards.
General Multi-table transaction support Views Support Change Data Capture (CDC) Support Snapshot tagging and branching Inline file compaction Delete File compaction Z-ordering / Space-filling curves Support UPSERT Clients Rust and Go projects are pointing to their respective repositories which include their own issues as the implementations are not final.</description></item><item><title>Security</title><link>https://iceberg.apache.org/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/security/</guid><description>Reporting Security Issues The Apache Iceberg Project uses the standard process outlined by the Apache Security Team for reporting vulnerabilities. Note that vulnerabilities should not be publicly disclosed until the project has responded.
To report a possible security vulnerability, please email security@iceberg.apache.org.
Verifying Signed Releases Please refer to the instructions on the Release Verification page.</description></item><item><title>Spec</title><link>https://iceberg.apache.org/spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/spec/</guid><description>Iceberg Table Spec This is a specification for the Iceberg table format that is designed to manage a large, slow-changing collection of files in a distributed file system or key-value store as a table.
Format Versioning Versions 1 and 2 of the Iceberg spec are complete and adopted by the community.
The format version number is incremented when new features are added that will break forward-compatibility&amp;mdash;that is, when older readers would not read newer table features correctly.</description></item><item><title>Talks</title><link>https://iceberg.apache.org/talks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/talks/</guid><description>Iceberg Talks Here is a list of talks and other videos related to Iceberg.
Eliminating Shuffles in DELETE, UPDATE, MERGE Date: July 27, 2023, Authors: Anton Okolnychyi, Chao Sun
Write Distribution Modes in Apache Iceberg Date: March 15, 2023, Author: Russell Spitzer
Technical Evolution of Apache Iceberg Date: March 15, 2023, Author: Anton Okolnychyi
Iceberg&amp;rsquo;s Best Secret Exploring Metadata Tables Date: January 12, 2023, Author: Szehon Ho
Data architecture in 2022 Date: May 5, 2022, Authors: Ryan Blue</description></item><item><title>Terms</title><link>https://iceberg.apache.org/terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/terms/</guid><description>Terms Snapshot A snapshot is the state of a table at some time.
Each snapshot lists all of the data files that make up the table&amp;rsquo;s contents at the time of the snapshot. Data files are stored across multiple manifest files, and the manifests for a snapshot are listed in a single manifest list file.
Manifest list A manifest list is a metadata file that lists the manifests that make up a table snapshot.</description></item><item><title>Trademarks</title><link>https://iceberg.apache.org/trademarks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/trademarks/</guid><description>Trademarks Apache Iceberg, Iceberg, Apache, the Apache feather logo, and the Apache Iceberg project logo are either registered trademarks or trademarks of The Apache Software Foundation in the United States and other countries.</description></item><item><title>Vendors</title><link>https://iceberg.apache.org/vendors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/vendors/</guid><description>Vendors Supporting Iceberg Tables This page contains some of the vendors who are shipping and supporting Apache Iceberg in their products
CelerData CelerData provides commercial offerings for StarRocks, a distributed MPP SQL engine for enterprise analytics on Iceberg. With its fully vectorized technology, local caching, and intelligent materialized view, StarRocks delivers sub-second query latency for both batch and real-time analytics. CelerData offers both an enterprise deployment and a cloud service to help customers use StarRocks more smoothly.</description></item><item><title>View Spec</title><link>https://iceberg.apache.org/view-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/view-spec/</guid><description>Iceberg View Spec Background and Motivation Most compute engines (e.g. Trino and Apache Spark) support views. A view is a logical table that can be referenced by future queries. Views do not contain any data. Instead, the query stored by the view is executed every time the view is referenced by another query.
Each compute engine stores the metadata of the view in its proprietary format in the metastore of choice.</description></item><item><title>What is Iceberg?</title><link>https://iceberg.apache.org/about/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iceberg.apache.org/about/about/</guid><description> Iceberg is a high-performance format for huge analytic tables. Iceberg brings the reliability and simplicity of SQL tables to big data, while making it possible for engines like Spark, Trino, Flink, Presto, Hive and Impala to safely work with the same tables, at the same time. Learn More</description></item></channel></rss>